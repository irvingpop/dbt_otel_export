receivers:
  sqlquery/prod:
    driver: snowflake
    datasource: "${SNOWFLAKE_USERNAME}:${SNOWFLAKE_PASSWORD}@${SNOWFLAKE_INSTANCE}/${SNOWFLAKE_DATABASE}/${SNOWFLAKE_SCHEMA}?warehouse=${SNOWFLAKE_WAREHOUSE}&role=${SNOWFLAKE_ROLE}"
    collection_interval: 60s
    queries:
      - sql: |
          call get_latest_otel_traces()
        metrics:
          - metric_name: duration_ms
            value_column: duration_ms
            value_type: double
            attribute_columns: ["trace.trace_id", "trace.span_id", "trace.parent_id", "timestamp", "duration_ms", "dbt.version", "dbt.project_name", "dbt.run_started_at", "dbt.command", "dbt.full_refresh_flag", "dbt.target_profile_name", "dbt.target_name", "dbt.target_schema", "dbt.target_threads", "dbt.cloud.project_id", "dbt.cloud.job_id", "dbt.cloud.run_id", "dbt.cloud.run_reason_category", "dbt.cloud.run_reason", "dbt.env_vars", "dbt.vars", "dbt.invocation_args", "dbt.custom_envs", "dbt.model.node_id", "dbt.model.was_full_refresh", "dbt.model.thread_id", "dbt.model.status", "dbt.model.query_completed_at", "dbt.model.rows_affected", "dbt.model.materialization", "dbt.model.schema", "name", "dbt.model.alias", "message", "status_code"]
            ts_column: timestamp
            static_attributes:
              service.name: dbt_prod

processors:
  batch:

exporters:
  debug:
    verbosity: basic
    # uncomment below to log all messages to the console
    # verbosity: detailed
  otlp:
    endpoint: "api.honeycomb.io:443"
    headers:
      "x-honeycomb-team": ${HONEYCOMB_API_KEY}
      "x-honeycomb-dataset": ${HONEYCOMB_DATASET}

service:
  pipelines:
    metrics:
      receivers: [sqlquery/prod]
      processors: [batch]
      exporters: [debug, otlp]
